# Generated by Django 5.2.6 on 2025-09-29 07:00

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("school", "0002_initial"),
        ("subjects", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Student",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("admission_number", models.CharField(max_length=50, unique=True)),
                (
                    "kcpe_marks",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(500),
                        ],
                    ),
                ),
                ("stream", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "phone_contact",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "form_level",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="students",
                        to="school.formlevel",
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="students",
                        to="school.school",
                    ),
                ),
                (
                    "subjects",
                    models.ManyToManyField(
                        related_name="students", to="subjects.subject"
                    ),
                ),
            ],
            options={
                "ordering": ["admission_number"],
            },
        ),
        migrations.CreateModel(
            name="StudentAdvancement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("advancement_year", models.IntegerField()),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "from_form_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="students_advanced_from",
                        to="school.formlevel",
                    ),
                ),
                (
                    "student",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="advancements",
                        to="students.student",
                    ),
                ),
                (
                    "to_form_level",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="students_advanced_to",
                        to="school.formlevel",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Student Advancements",
                "ordering": ["-advancement_year"],
            },
        ),
    ]
