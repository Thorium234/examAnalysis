# Generated by Django 5.2.6 on 2025-09-25 18:50

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('school', '0001_initial'),
        ('students', '0001_initial'),
        ('subjects', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('form_level', models.IntegerField(choices=[(1, 'Form 1'), (2, 'Form 2'), (3, 'Form 3'), (4, 'Form 4')])),
                ('year', models.IntegerField()),
                ('term', models.IntegerField(choices=[(1, 'Term 1'), (2, 'Term 2'), (3, 'Term 3')])),
                ('is_published', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='school.school')),
            ],
            options={
                'unique_together': {('school', 'name', 'form_level', 'year', 'term')},
            },
        ),
        migrations.CreateModel(
            name='GradingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading_systems', to='school.school')),
                ('subject_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading_systems', to='subjects.subjectcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_marks', models.IntegerField()),
                ('grade', models.CharField(blank=True, max_length=10)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('subject_rank', models.IntegerField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='exams.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='students.student')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='subjects.subject')),
                ('teacher', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('exam', 'student', 'subject')},
            },
        ),
        migrations.CreateModel(
            name='GradingRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_marks', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('max_marks', models.IntegerField(validators=[django.core.validators.MaxValueValidator(100)])),
                ('grade', models.CharField(max_length=10)),
                ('points', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('grading_system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grading_ranges', to='exams.gradingsystem')),
            ],
            options={
                'ordering': ['-max_marks'],
                'unique_together': {('grading_system', 'min_marks', 'max_marks')},
            },
        ),
        migrations.CreateModel(
            name='PaperResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paper_results', to='exams.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paper_results', to='students.student')),
                ('subject_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paper_results', to='subjects.subjectpaper')),
            ],
            options={
                'unique_together': {('exam', 'student', 'subject_paper')},
            },
        ),
        migrations.CreateModel(
            name='StudentExamSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_marks', models.IntegerField()),
                ('mean_marks', models.FloatField()),
                ('mean_grade', models.CharField(max_length=10)),
                ('total_points', models.IntegerField()),
                ('stream_position', models.IntegerField()),
                ('overall_position', models.IntegerField()),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_summaries', to='exams.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_summaries', to='students.student')),
            ],
            options={
                'unique_together': {('exam', 'student')},
            },
        ),
    ]
