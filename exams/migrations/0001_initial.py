# Generated by Django 5.2.6 on 2025-09-29 07:00

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Exam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "form_level",
                    models.IntegerField(
                        choices=[
                            (1, "Form 1"),
                            (2, "Form 2"),
                            (3, "Form 3"),
                            (4, "Form 4"),
                        ]
                    ),
                ),
                ("year", models.IntegerField()),
                (
                    "term",
                    models.IntegerField(
                        choices=[(1, "Term 1"), (2, "Term 2"), (3, "Term 3")]
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_ordinary_exam", models.BooleanField(default=True)),
                ("is_consolidated_exam", models.BooleanField(default=False)),
                ("is_kcse", models.BooleanField(default=False)),
                ("is_year_average", models.BooleanField(default=False)),
                ("is_published", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ExamResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("final_marks", models.IntegerField()),
                ("grade", models.CharField(blank=True, max_length=10)),
                ("points", models.IntegerField(blank=True, null=True)),
                ("subject_rank", models.IntegerField(blank=True, null=True)),
                ("comment", models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name="GradingRange",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "min_marks",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "max_marks",
                    models.IntegerField(
                        validators=[django.core.validators.MaxValueValidator(100)]
                    ),
                ),
                ("grade", models.CharField(max_length=10)),
                (
                    "points",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
            ],
            options={
                "ordering": ["-max_marks"],
            },
        ),
        migrations.CreateModel(
            name="GradingSystem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("is_default", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="PaperResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "marks",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="StudentExamSummary",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("total_marks", models.IntegerField()),
                ("mean_marks", models.FloatField()),
                ("mean_grade", models.CharField(max_length=10)),
                ("total_points", models.IntegerField()),
                ("stream_position", models.IntegerField()),
                ("overall_position", models.IntegerField()),
                (
                    "subjects_count",
                    models.IntegerField(
                        default=0, help_text="Total number of subjects taken"
                    ),
                ),
                (
                    "best_of_seven_marks",
                    models.IntegerField(
                        blank=True,
                        help_text="Total marks from best 7 subjects",
                        null=True,
                    ),
                ),
                (
                    "best_of_seven_points",
                    models.IntegerField(
                        blank=True,
                        help_text="Total points from best 7 subjects",
                        null=True,
                    ),
                ),
                (
                    "excluded_subjects",
                    models.JSONField(
                        default=list,
                        help_text="List of subject IDs excluded from best 7 calculation",
                    ),
                ),
            ],
        ),
    ]
