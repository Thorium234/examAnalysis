# Generated by Django 5.2.6 on 2025-09-20 13:05

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FormLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(choices=[(1, 'Form 1'), (2, 'Form 2'), (3, 'Form 3'), (4, 'Form 4')])),
            ],
            options={
                'ordering': ['number'],
            },
        ),
        migrations.CreateModel(
            name='GradingRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('low_mark', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('high_mark', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('grade', models.CharField(max_length=2)),
                ('points', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(12)])),
            ],
            options={
                'ordering': ['-high_mark'],
            },
        ),
        migrations.CreateModel(
            name='GradingSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaperResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'Present'), ('A', 'Absent'), ('D', 'Disqualified')], default='P', max_length=1)),
                ('marks', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(-2), django.core.validators.MaxValueValidator(100)])),
                ('date_entered', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ['exam', 'student', 'subject', 'paper__paper_number'],
            },
        ),
        migrations.CreateModel(
            name='StudentExamSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_marks', models.IntegerField(default=0)),
                ('total_points', models.IntegerField(default=0)),
                ('mean_marks', models.FloatField(default=0.0)),
                ('mean_grade', models.CharField(blank=True, max_length=2)),
                ('stream_position', models.IntegerField(blank=True, null=True)),
                ('overall_position', models.IntegerField(blank=True, null=True)),
                ('total_students_in_stream', models.IntegerField(blank=True, null=True)),
                ('total_students_overall', models.IntegerField(blank=True, null=True)),
                ('subjects_count', models.IntegerField(default=0)),
                ('attempted_subjects', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['exam', '-total_marks'],
            },
        ),
        migrations.CreateModel(
            name='SubjectCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Subject Categories',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Enter the name of the exam', max_length=200)),
                ('year', models.IntegerField()),
                ('term', models.IntegerField(choices=[(1, 'Term 1'), (2, 'Term 2'), (3, 'Term 3')])),
                ('is_ordinary_exam', models.BooleanField(default=False, verbose_name='Ordinary Exam')),
                ('is_consolidated_exam', models.BooleanField(default=False, verbose_name='Consolidated Exam')),
                ('is_kcse', models.BooleanField(default=False, verbose_name='KCSE')),
                ('is_year_average', models.BooleanField(default=False, verbose_name='Year Average')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-year', '-term'],
            },
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'Present'), ('A', 'Absent'), ('D', 'Disqualified')], default='P', max_length=1)),
                ('total_marks', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(-2), django.core.validators.MaxValueValidator(100)])),
                ('grade', models.CharField(blank=True, max_length=2)),
                ('points', models.IntegerField(blank=True, null=True)),
                ('deviation', models.IntegerField(blank=True, null=True)),
                ('rank_in_subject', models.IntegerField(blank=True, null=True)),
                ('total_students_in_subject', models.IntegerField(blank=True, null=True)),
                ('date_entered', models.DateTimeField(default=django.utils.timezone.now)),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='exams.exam')),
            ],
            options={
                'ordering': ['exam', 'student', 'subject'],
            },
        ),
    ]
