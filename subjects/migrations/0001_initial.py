# Generated by Django 5.2.6 on 2025-09-29 07:00

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("school", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SubjectCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subject_categories",
                        to="school.school",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Subject Categories",
                "unique_together": {("name", "school")},
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("code", models.CharField(max_length=10)),
                ("is_optional", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "form_levels",
                    models.ManyToManyField(
                        blank=True, related_name="subjects", to="school.formlevel"
                    ),
                ),
                (
                    "school",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subjects",
                        to="school.school",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="subjects",
                        to="subjects.subjectcategory",
                    ),
                ),
            ],
            options={
                "unique_together": {("school", "name", "code")},
            },
        ),
        migrations.CreateModel(
            name="SubjectPaperRatio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "paper1_max_marks",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum marks for Paper 1",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "paper1_contribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Percentage contribution of Paper 1 to final marks",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "paper2_max_marks",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum marks for Paper 2",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "paper2_contribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Percentage contribution of Paper 2 to final marks",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "paper3_max_marks",
                    models.IntegerField(
                        blank=True,
                        help_text="Maximum marks for Paper 3",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "paper3_contribution",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Percentage contribution of Paper 3 to final marks",
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "subject",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="paper_ratio",
                        to="subjects.subject",
                    ),
                ),
            ],
            options={
                "verbose_name": "Subject Paper Ratio",
                "verbose_name_plural": "Subject Paper Ratios",
            },
        ),
        migrations.CreateModel(
            name="SubjectPaper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "paper_number",
                    models.CharField(help_text="e.g., PP1, PP2, PP3", max_length=10),
                ),
                (
                    "max_marks",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "student_contribution_marks",
                    models.IntegerField(
                        default=50,
                        help_text="Student contribution marks to the final subject score.",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="papers",
                        to="subjects.subject",
                    ),
                ),
            ],
            options={
                "unique_together": {("subject", "paper_number")},
            },
        ),
    ]
